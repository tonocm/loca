#!/usr/bin/ruby

LocaCmdDir = File.dirname(File.expand_path(__FILE__))
$: << LocaCmdDir

require 'src/env'
require 'src/machine'
require 'net/http'
require 'rest_client'
require 'launchy'

$Debug = true
$DryRun = false

def run_cmd syscmd
  puts syscmd
  is_ok = system syscmd unless $DryRun
  raise "system command #{syscmd} failed" unless is_ok
end

def cmd_help
  puts "LocalityLab v0.1"
  puts "#{$0.split('/')[-1]} commands:"
  puts "config\tconfiguration"
  puts "run\trun loca analysis on one program"
  puts "  -d\t(default) run data analysis"
  puts "  -i\trun instruction analysis"
  puts "  -a\trun both data and instruction analysis"
  puts "upload\tupload current data to server"
  puts "clean\t[todo]clean current data dir"
  puts "help"
end

if ARGV.size >= 1
  cmd = ARGV.shift
    runpara = ARGV.shift if cmd == "run"
  args = ARGV
else
  cmd_help
  Kernel.exit(1)
end

begin
  if cmd == "config"
    Labenv.config

  elsif cmd == "help"
    cmd_help

  else
    if Labenv.env == nil
      warn "Please run '#{$0.split('/')[-1]} config' first"
      exit( 1 )
    end

    if cmd == "run"
      data_dir = Labenv.paths[Labenv::DataDir]
      basename = Machine.get_output_file_name( args[0] )
      basename = File.join( data_dir, basename )
      if runpara == "-d"
        syscmd = "#{Labenv.env[cmd]} -o #{basename}.dat -m 1 -- #{args * ' '}"
      elsif runpara == "-i"
        syscmd = "#{Labenv.env[cmd]} -o #{basename}.dat -m 2 -- #{args * ' '}"
      elsif runpara == "-a"
        syscmd = "#{Labenv.env[cmd]} -o #{basename}.dat -m 3 -- #{args * ' '}"
      else
        syscmd = "#{Labenv.env[cmd]} -o #{basename}.dat -m 1 -- #{runpara} #{args * ' '}"
      end
      t1 = Time.now
      run_cmd syscmd
      info = Machine.get_machine_env
      info[:time] = Time.now - t1
      info[:status] = $?
      info[:command] = syscmd
      File.open( "#{basename}.info", 'w', 0644) do |f|
        f.puts info.to_yaml
      end

    elsif cmd == "upload"
      data_dir = Labenv.paths[Labenv::DataDir]
      Dir.foreach(data_dir) { |file|
        if file !~ /^\. */
          basename = File.join( data_dir, file )
          f = File.new(basename, "rb")
          reply = RestClient.post('http://localhost:3000/upload',
                                  :upload =>  f
          )
          if reply != ''
            puts reply
            Launchy.open(reply)
          end
        end
      }
    elsif cmd == "clean"
      #todo
      puts "[todo] comming soon, please manually empty the data dir"
    else
      puts "#{cmd} not a valid command (see '#{$0.split('/')[-1]} help')"
    end

  end
rescue Exception => e
  msg = "Loca Error Report: command 'loca #{cmd}' failed.\n#{e.message}" + "\n" + "#{e.backtrace * ' '}\n\n"
  msg += Labenv.env.inspect
  while true
    puts "\n\nLoca Execution Error: Do you give permission to send the error report by email? \n(Answer yes/no/see report)"
    answer = $stdin.gets.chomp
    if answer =~ /^see/
      puts msg
    elsif answer == 'yes' || answer == 'y'
      require 'src/email'
      send_email 'cding@cs.rochester.edu', {:body => msg}
      break
    else
      break
    end # if
  end # while
end
  
